{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport useAnswers from '../hooks/useAnswers';\nvar cx = createClassNames('Answers');\n/* eslint-disable react/prop-types */\n\nfunction DefaultAnswersComponent(_ref) {\n  var isLoading = _ref.isLoading,\n      hits = _ref.hits;\n  return React.createElement(\"div\", {\n    className: cx('', hits.length === 0 && '-empty')\n  }, React.createElement(\"div\", {\n    className: cx('header')\n  }), isLoading ? React.createElement(\"div\", {\n    className: cx('loader')\n  }) : React.createElement(\"ul\", {\n    className: cx('list')\n  }, hits.map(function (hit, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      className: cx('item')\n    }, JSON.stringify(hit));\n  })));\n}\n\nexport default function Answers(_ref2) {\n  var searchClient = _ref2.searchClient,\n      queryLanguages = _ref2.queryLanguages,\n      attributesForPrediction = _ref2.attributesForPrediction,\n      _ref2$nbHits = _ref2.nbHits,\n      nbHits = _ref2$nbHits === void 0 ? 1 : _ref2$nbHits,\n      renderDebounceTime = _ref2.renderDebounceTime,\n      searchDebounceTime = _ref2.searchDebounceTime,\n      _ref2$answersComponen = _ref2.answersComponent,\n      AnswersComponent = _ref2$answersComponen === void 0 ? DefaultAnswersComponent : _ref2$answersComponen,\n      extraParameters = _objectWithoutProperties(_ref2, [\"searchClient\", \"queryLanguages\", \"attributesForPrediction\", \"nbHits\", \"renderDebounceTime\", \"searchDebounceTime\", \"answersComponent\"]);\n\n  var _useAnswers = useAnswers(_objectSpread({\n    searchClient: searchClient,\n    queryLanguages: queryLanguages,\n    attributesForPrediction: attributesForPrediction,\n    nbHits: nbHits,\n    renderDebounceTime: renderDebounceTime,\n    searchDebounceTime: searchDebounceTime\n  }, extraParameters)),\n      hits = _useAnswers.hits,\n      isLoading = _useAnswers.isLoading;\n\n  return React.createElement(AnswersComponent, {\n    hits: hits,\n    isLoading: isLoading\n  });\n}\n/* eslint-enable react/prop-types */","map":null,"metadata":{},"sourceType":"module"}